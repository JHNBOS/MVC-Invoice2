@using System.Diagnostics
@using InvoiceWebApp.Data
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Home Page";

    User user = null;
    Admin admin = null;
    AppSettings settings = null;

    //Check for user
    if (SessionHelper.IsExists(Context.Session, "User"))
    {
        user = (User)Context.Session.Get<User>("User");
    }
    //Check for admin
    if (SessionHelper.IsExists(Context.Session, "Admin"))
    {
        admin = (Admin)Context.Session.Get<Admin>("Admin");
    }
    //Check for settings
    if (SessionHelper.IsExists(Context.Session, "Settings"))
    {
        Debug.WriteLine("Settings exists");
        settings = SessionHelper.Get<AppSettings>(Context.Session, "Settings");
    }
    else
    {
        settings = _context.Settings.FirstOrDefault();
        SessionHelper.Set(Context.Session, "Settings", settings);
    }

    var count = ViewBag.invoiceList.Count;
}

@section HEAD{
    <!-- amCharts javascript code -->
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/pie.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/gauge.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/light.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/dark.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/black.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.js" type="text/javascript"></script>
    <link href="https://www.amcharts.com/lib/3/plugins/export/export.css" rel="stylesheet" type="text/css">
}

<div class="container">
    <div class="row main">
        <div class="panel-heading">
            <div class="panel-title text-center">
                <h1 class="title">Home</h1>
                <hr style="width:60%;border-top:2px solid #fff;" />
            </div>
        </div>

        <div class="main-large-home main-center">
            <!-- Top Row -->
            <div class="row">
                <div class="col-sm-3 col-md-3"></div>
                <div class="col-sm-6 col-md-6 text-center">
                    @if (user != null && admin == null)
                    { <h2 style="margin-top: 40px;">Welcome, @user.Debtor.FirstName</h2> }
                    else if (user == null && admin != null)
                    { <h2 style="margin-top: 40px;">Welcome, @admin.FirstName</h2> }
                    else
                    { <h2 style="margin-top: 40px;">Welcome</h2> }
                </div>
                <div class="col-sm-3 col-md-3"></div>
            </div>

            <br />
            <br />

            <!-- Middle Row -->
            <div class="row">
                <div class="col-sm-2 col-md-2"></div>
                <div class="col-sm-8 col-md-8">
                    <h4 id="invoiceText" class="text-center"></h4>
                </div>
                <div class="col-sm-2 col-md-2"></div>
            </div>

            <br />
            <br />

            @if (user != null && user.AccountType == "Client")
            {
                <!-- Bottom Row Client -->
                <div class="row">
                    <div class="col-sm-3 col-md-3"></div>
                    <div class="col-sm-6 col-md-6 text-center">
                        <div id="chartdiv" style="width:100%;height:400px;background-color:#d3d3d3;display:none;"></div>
                    </div>
                    <div class="col-sm-3 col-md-3"></div>
                </div>
            }

            @if (admin != null)
            {
                <!-- Bottom Row Admin -->
                <div class="row">
                    <div class="col-sm-1 col-md-1"></div>
                    <div class="col-sm-5 col-md-5 text-center">
                        <div id="admin_chartdiv" style="width:100%;height:400px;background-color:#fff;display:none;"></div>
                    </div>
                    <div class="col-sm-5 col-md-5">
                        <div id="admin_chartdiv2" style="width:100%;height:400px;background-color:#fff;display:none;"></div>
                    </div>
                    <div class="col-sm-1 col-md-1"></div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            var user = null;
            var admin = null;

            @if (user != null)
            {
                <text>
                    user = "@user.Email";
                </text>
            }

            @if (admin != null)
            {
                <text>
                    admin = "@admin.Email";
                </text>
            }

            if (user != null)
            {
                setText();
                $("#chartdiv").show();
                showClientChart();
            }
            if (admin != null)
            {
                $("#admin_chartdiv").show();
                $("#admin_chartdiv2").show();
                showAdminChart();
            }
            if (user == null && admin == null) {
                var noUserText = "With this application it is possible to view and pay your invoices"
                            + "<br /><br />"
                            + "To use this website, you must login using the credentials sent to you by @settings.CompanyName.";
                $("#invoiceText").html(noUserText);
            }
        });

        function setText(){
            //Set text according to items inside invoices
            @if (user != null && (count == 0 || ViewBag.invoiceList == null))
            {
                <text>
                    $("#invoiceText").html("There are no unpaid invoices found at the moment.");
                </text>
            }

            //Set text according to items inside invoices
            @if (user != null && count == 1)
            {
                <text>
                    $("#invoiceText").html("You have 1 unpaid invoice." + "<br />" + "To be paid: &euro; @(ViewBag.total)");
                </text>
            }

            //Set text according to items inside invoices
            @if (user != null && count > 1)
            {
                <text>
                    $("#invoiceText").html("You have @(count) unpaid invoices." + "<br />" + "To be paid: &euro;  @(ViewBag.total)");
                </text>
            }
        };

        /* BEGIN OF SCRIPT FOR CHART */
        function showClientChart() {
            var paidArray = "";
            var unpaidArray = "";

            @{
                int? paid = ViewBag.paid;
                int? unPaid = ViewBag.unpaid;

                if (paid != null)
                {
                    <text>
                        paidArray = @paid;
                    </text>
                }

                if (unPaid != null)
                {
                    <text>
                        unpaidArray = @unPaid;
                    </text>
                }
            }

            if (paidArray > 0 && unpaidArray >= 0) {
                AmCharts.makeChart("chartdiv",
                    {
                        "type": "pie",
                        "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                        "innerRadius": 0,
                        "labelRadius": 21,
                        "startDuration": 2,
                        "radius": 100,
                        "baseColor": "#0063D3",
                        "hoverAlpha": 0.62,
                        "outlineThickness": 0,
                        "titleField": "category",
                        "valueField": "column-1",
                        "decimalSeparator": ",",
                        "percentPrecision": 1,
                        "theme": "light",
                        "thousandsSeparator": ".",
                        "allLabels": [],
                        "creditsPosition": "bottom-right",
                        "showEntries": true,
                        "balloon": {},
                        "legend": {
                            "enabled": true,
                            "align": "center",
                            "markerType": "circle"
                        },
                        "titles": [],
                        "dataProvider": [
                            {
                                "category": "Paid",
                                "column-1": paidArray
                            },
                            {
                                "category": "Unpaid",
                                "column-1": unpaidArray
                            }
                        ]
                    });
            }
        }

        function showAdminChart() {
            var total = "";
            var paidCount = "";
            var unpaidCount = "";
            var totalPaid = "";
            var totalAmount = "";
            var totalAmountFormatted = "";
            var conceptCount = "";

            @{
                int? totalPercentage = ViewBag.totalPercentage;
                int? paidInvoiceCount = ViewBag.totalPaidCount;
                int? unpaidInvoiceCount = ViewBag.totalUnPaidCount;
                int? conceptInvoiceCount = ViewBag.conceptCount;
                decimal? totalInvoicePaid = ViewBag.totalPaid;
                decimal? totalInvoiceAmount = ViewBag.totalAmount;

                if (totalPercentage != null){
                    <text>
                        total = @totalPercentage;
                    </text>
                }
                if (paidInvoiceCount != null){
                    <text>
                        paidCount = @paidInvoiceCount;
                    </text>
                }
                if (unpaidInvoiceCount != null){
                    <text>
                        unpaidCount = @unpaidInvoiceCount;
                    </text>
                }
                if (totalInvoicePaid != null){
                    <text>
                        totalPaid = @totalInvoicePaid;
                    </text>
                }
                if (totalInvoiceAmount != null){
                    <text>
                        totalAmount = @totalInvoiceAmount;
                    </text>
                }
                if (conceptInvoiceCount != null)
                {
                    <text>
                        conceptCount = @conceptInvoiceCount;
                        console.log("conceptCount: " + conceptCount);
                    </text>
                }
            }

            if (totalAmount >= 0) {
                totalAmountFormatted = AmCharts.formatNumber(totalAmount, {
                    precision: -1,
                    decimalSeparator: ",",
                    thousandsSeparator: "."
                }, 2);
            }

            if (totalAmount > 0 && totalPaid >= 0) {
                AmCharts.makeChart("admin_chartdiv",
                    {
                        "type": "serial",
                        "categoryField": "category",
                        "decimalSeparator": ",",
                        "thousandsSeparator": ".",
                        "rotate": true,
                        "startDuration": 2,
                        "creditsPosition": "bottom-left",
                        "theme": "light",
                        "precision": 2,
                        "usePrefixes": false,
                        "categoryAxis": {
                            "autoRotateCount": 0,
                            "gridPosition": "start",
                            "autoGridCount": false,
                            "labelsEnabled": false,
                            "title": "Currently Paid",
                            "size": 10
                        },
                        "trendLines": [],
                        "graphs": [
                            {
                                "fillAlphas": 1,
                                "id": "AmGraph-1",
                                "title": "graph 1",
                                "precision": 2,
                                "type": "column",
                                "valueField": "graph 1",
                                "balloonText": "Currently Paid: €[[graph 1]]",
                                "balloonFunction": function (item, graph) {
                                    var result = graph.balloonText;
                                    for (var key in item.dataContext) {
                                        if (item.dataContext.hasOwnProperty(key) && !isNaN(item.dataContext[key])) {
                                            var formatted = AmCharts.formatNumber(item.dataContext[key], {
                                                precision: -1,
                                                decimalSeparator: ",",
                                                thousandsSeparator: "."
                                            }, 2);
                                            result = result.replace("[[" + key + "]]", formatted);
                                        }
                                    }
                                    return result;
                                },
                            }
                        ],
                        "guides": [
                            {
                                "above": true,
                                "balloonText": "Total Amount: €" + totalAmountFormatted,
                                "position": "top",
                                "boldLabel": true,
                                "angle": 0,
                                "dashLength": 0,
                                "id": "Guide-1",
                                "inside": true,
                                "label": "Total Amount",
                                "labelRotation": 90,
                                "lineAlpha": 1,
                                "lineColor": "#FFFF00",
                                "lineThickness": 3,
                                "value": totalAmount
                            }
                        ],
                        "valueAxes": [
                            {
                                "id": "ValueAxis-1",
                                "maximum": totalAmount,
                                "minimum": (totalPaid - (totalPaid / 3)),
                                "precision": 2,
                                "unit": "€",
                                "labelsEnabled": false,
                                "unitPosition": "left",
                                "title": "",
                                "titleBold": false
                            }
                        ],
                        "allLabels": [],
                        "balloon": {},
                        "titles": [
                            {
                                "id": "Title-1",
                                "size": 10,
                                "text": "Current amount of paid invoices"
                            }
                        ],
                        "dataProvider": [
                            {
                                "category": "category 1",
                                "graph 1": totalPaid
                            }
                        ]
                    }
                );
            }

            if (paidCount >= 0 && unpaidCount > 0) {
                AmCharts.makeChart("admin_chartdiv2",
                    {
                        "type": "pie",
                        "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                        "innerRadius": 3,
                        "labelRadius": 16,
                        "radius": 90,
                        "maxLabelWidth": 198,
                        "pullOutDuration": 2,
                        "pullOutEffect": "elastic",
                        "startDuration": 2,
                        "startEffect": "easeOutSine",
                        "titleField": "category",
                        "valueField": "column-1",
                        "creditsPosition": "bottom-right",
                        "theme": "light",
                        "allLabels": [],
                        "balloon": {},
                        "legend": {
                            "enabled": true,
                            "align": "center",
                            "markerType": "circle",
                        },
                        "titles": [
                            {
                                "id": "Title-1",
                                "size": 10,
                                "text": "Percentages of paid/unpaid invoices"
                            }
                        ],
                        "dataProvider": [
                            {
                                "category": "Paid",
                                "column-1": paidCount
                            },
                            {
                                "category": "Unpaid",
                                "column-1": unpaidCount
                            }
                        ]
                    });
            }

            if ($("#admin_chartdiv").is(":empty") && $("#admin_chartdiv2").is(":empty")) {
                $("#admin_chartdiv").hide();
                $("#admin_chartdiv2").hide();
                var noInvoicesText = "There are currently no invoices.";

                if (conceptCount == 0) {
                    noInvoicesText += "<br /> You have 0 invoices saved as 'concept'.";
                }
                else if (conceptCount == 1) {
                    noInvoicesText += "<br /> You have " + conceptCount + " invoice saved as 'concept'.";
                } else {
                    noInvoicesText += "<br /> You have " + conceptCount + " invoices saved as 'concept'.";
                }

                $("#invoiceText").html(noInvoicesText);

            }
        }
    </script>
}