@using System.Diagnostics
@using InvoiceWebApp.Data
@using InvoiceWebApp.Models
@using static InvoiceWebApp.Models.Debtor
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Home Page";

    User user = null;
    Admin admin = null;
    AppSettings settings = null;

    //Check for user
    if (SessionHelper.IsExists(Context.Session, "User")) {
        user = (User)Context.Session.Get<User>("User");
    }
    //Check for admin
    if (SessionHelper.IsExists(Context.Session, "Admin")) {
        admin = (Admin)Context.Session.Get<Admin>("Admin");
    }
    //Check for settings
    if (SessionHelper.IsExists(Context.Session, "Settings")) {
        Debug.WriteLine("Settings exists");
        settings = SessionHelper.Get<AppSettings>(Context.Session, "Settings");
    } else {
        settings = _context.Settings.FirstOrDefault();
        SessionHelper.Set(Context.Session, "Settings", settings);
    }
}

@section HEAD{
    <link href="https://www.amcharts.com/lib/3/plugins/export/export.css" rel="stylesheet" type="text/css">

    <!-- amCharts javascript code -->
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/pie.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/gauge.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/light.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/dark.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/black.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.js" type="text/javascript"></script>
}

<div>
    <div class="container" id="home">
        <div class="row">
            <div class="col s12 col m12 center-align">
                @if (user != null) {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome, @user.Debtor.FirstName</h4>
                } else if (admin != null) {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome, @admin.FirstName</h4>
                } else {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome</h4>
                }
            </div>
        </div>

        <div class="row">
            <div class="col s12 col m12">
                <p id="invoiceText" class="center-align"></p>
            </div>
        </div>

        <div class="divider" style="background-color: #b5b5b5;width: 80%;margin:0 auto;"></div>
		<br />

        @if (user != null && admin == null) {
            <div class="row">
                <div class="col s3 col m3"></div>
                <div class="col s12 col m12 center-align">
                    <div id="chartdiv" style="width:100%;height:400px;background:rgba(255, 255, 255, 0)"></div>
                </div>
                <div class="col s3 col m3"></div>
            </div>
        }

        @if (admin != null) {
            <div class="row">
                <div class="col s6 col m6 center-align">
                    <div id="admin_chartdiv" style="width:100%;height:250px;background:rgba(255, 255, 255, 0);"></div>
                </div>
                <div class="col s6 col m6 center-align">
                    <div id="admin_chartdiv2" style="width:100%;height:250px;background:rgba(255, 255, 255, 0);"></div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            var user = null;
            var admin = null;
			var divHeight = $("#home").height();

			//Hide charts
			$("#chartdiv").hide();
			$("#admin_chartdiv").hide();
			$("#admin_chartdiv2").hide();

            @if (user != null) {
                <text>
					admin = null;
                    user = "@user.Email";
                </text>
            }
            @if (admin != null) {
                <text>
					user = null;
					admin = "@admin.Email";
                </text>
            }

            if (user != null) {
                setClientHome();
            }
            if (admin != null) {
                setAdminHome();
            }
            if (user == null && admin == null) {
                var noUserText = `
                            With this application it is possible to view and pay your invoices

                            <br />

                            To use this website, you must login using the credentials sent to you by <b> @settings.CompanyName <b>.

                            <br /><br /><br />

                            <a href="@Url.Action("Login", "Users")"
                                id="home-button"
                                class="btn-large indigo darken-1 waves-effect waves-light">
                                    <i class="fa fa-sign-in"></i>
                                    Sign In
                            </a>`;
                    $("#invoiceText").html(noUserText);
            }
        });

        //Setup text and charts when logged in client reaches home page
        function setClientHome() {
            var paidArray = "";
            var unpaidArray = "";

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices

            @if (ViewBag.clientNotPaidCount == 0){
                <text>
                    $("#invoiceText").html("There are no unpaid invoices found at the moment.");
                </text>
            }
            @if (ViewBag.clientNotPaidCount == 1) {
                <text>
                    $("#invoiceText").html("You have 1 unpaid invoice."
                        + "<br />"
						+ "Total paid: &euro; @(ViewBag.clientPaid)"
                        + "<br />"
                        + "To be paid: &euro;  @(ViewBag.clientNotPaid)");
                </text>
            }
            @if (ViewBag.clientNotPaidCount > 1) {
                <text>
                    $("#invoiceText").html("You have @(ViewBag.clientNotPaidCount) unpaid invoices."
                        + "<br />"
                        + "Total paid: &euro; @(ViewBag.clientPaid)"
                        + "<br />"
                        + "To be paid: &euro;  @(ViewBag.clientNotPaid)");
                </text>
            }
            //-----------------------------------------------------------------
            //Show chart based on invoices

            $("#chartdiv").show();

            @{
                int? paid = ViewBag.clientPaidCount;
                int? unpaid = ViewBag.clientNotPaidCount;

                if (paid != null)
                {
                    <text>
                        paidArray = @paid;
                    </text>
                }
                if (unpaid != null)
                {
                    <text>
                        unpaidArray = @unpaid;
                    </text>
                }
            }

            //-----------------------------------------------------------------
            //Chart one of one
            if (paidArray >= 0 && unpaidArray >= 0) {
                AmCharts.makeChart("chartdiv",
                    {
                        "type": "pie",
                        "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                        "innerRadius": 0,
                        "labelRadius": 21,
                        "startDuration": 2,
                        "radius": 100,
                        "baseColor": "#0063D3",
                        "hoverAlpha": 0.62,
                        "outlineThickness": 0,
                        "titleField": "category",
                        "valueField": "column-1",
                        "decimalSeparator": ",",
                        "percentPrecision": 1,
                        "theme": "light",
                        "thousandsSeparator": ".",
                        "allLabels": [],
                        "creditsPosition": "bottom-right",
                        "showEntries": true,
                        "balloon": {},
                        "legend": {
                            "enabled": true,
                            "align": "center",
                            "markerType": "circle"
                        },
                        "titles": [],
                        "dataProvider": [
                            {
                                "category": "Paid",
                                "column-1": paidArray
                            },
                            {
                                "category": "Unpaid",
                                "column-1": unpaidArray
                            }
                        ]
                    });

                $("#home").css("margin-bottom", "40px");
            }
        }

        //Setup text and charts when logged in admin reaches home page
        function setAdminHome() {
			var invoiceText = "";
			var finalText = "";
			var conceptText = "";

			var totalInvoices = 0;
			var conceptInvoices = 0;

            var paidCount = "";
			var unpaidCount = "";

            var total = "";
            var totalPaid = "";
			var totalAmountFormatted = "";

			var showCharts = false;

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices
			@*Final invoice text*@
            @if (ViewBag.finalCount == 0){
                <text>
					finalText += "There are currently no invoices.";
					showCharts = false;
                </text>
            }
            @if (ViewBag.finalCount == 1) {
                <text>
					finalText += "There is currently 1 invoice.";
					showCharts = true;
                </text>
            }
            @if (ViewBag.finalCount > 1) {
                <text>
					finalText += "There are currently @(ViewBag.finalCount) invoices.";
					showCharts = true;
                </text>
            }

			@*Concept invoice text*@
            @if (ViewBag.conceptCount == 0){
                <text>
					conceptText += "<br /> There are no invoices saved as 'concept'.";
                </text>
            }
            @if (ViewBag.conceptCount == 1) {
                <text>
					conceptText += "<br /> There is 1 invoice saved as 'concept'.";
                </text>
            }
            @if (ViewBag.conceptCount > 1) {
                <text>
					conceptText += "<br /> There are @(ViewBag.conceptCount) invoices saved as 'concept'.";
                </text>
            }

			invoiceText = finalText + conceptText;
			$("#invoiceText").html(invoiceText);

            //-----------------------------------------------------------------
            //Show chart based on invoices

			if (showCharts == true) {
				$("#admin_chartdiv").show();
				$("#admin_chartdiv2").show();

				@{
					int? paidInvoiceCount = ViewBag.adminPaidCount;
					int? unpaidInvoiceCount = ViewBag.adminNotPaidCount;

					int? totalInvoiceCount = ViewBag.finalCount;
					int? conceptInvoiceCount = ViewBag.conceptCount;

					decimal? totalPaid = ViewBag.totalPaid;
					decimal? totalAmount = ViewBag.total;

					if (paidInvoiceCount != null){
						<text>
							paidCount = @paidInvoiceCount;
						</text>
					}
					if (unpaidInvoiceCount != null){
						<text>
							unpaidCount = @unpaidInvoiceCount;
						</text>
					}
					if (totalPaid != null){
						<text>
							totalPaid = @totalPaid;
						</text>
					}
					if (totalAmount != null){
						<text>
							total = @totalAmount;
						</text>
					}
					if (totalInvoiceCount != null){
						<text>
							totalInvoices = @totalInvoiceCount;
						</text>
					}
					if (conceptInvoiceCount != null){
						<text>
							conceptInvoices = @conceptInvoiceCount;
						</text>
					}
				}

				//Format to two decimal number
				if (total > 0) {
					totalAmountFormatted = AmCharts.formatNumber(total, {
						precision: -1,
						decimalSeparator: ",",
						thousandsSeparator: "."
					}, 2);
				}

				//-----------------------------------------------------------------
				//Chart one of two
				if (conceptInvoices > 0 && total > 0) {
					if ($("#admin_chartdiv").empty()) {
						AmCharts.makeChart("admin_chartdiv",
							{
								"type": "serial",
								"categoryField": "category",
								"rotate": true,
								"depth3D": 8,
								"angle": 40,
								"colors": [
									"#eaa40b", //orange
								],
								"startEffect": "easeInSine",
								"startDuration": 2,
								"autoDisplay": true,
								"plotAreaBorderAlpha": 0,
								"plotAreaBorderColor": "#FFF9F9",
								"plotAreaFillAlphas": 0,
								"fontSize": 12,
								"theme": "light",
								"categoryAxis": {
									"autoWrap": true,
									"gridPosition": "start",
									"gridAlpha": 0,
									"titleFontSize": 0,
									"labelsEnabled": false,
									"gridCount": 0,
									"gridThickness": 0,
									"tickLength": 0,
									"axisColor": "#A4A4A4"
								},
								"trendLines": [],
								"graphs": [
									{
										"balloonText": "Invoices saved as concept: [[value]]",
										"bulletAlpha": 0,
										"color": "#000",
										"columnWidth": 1.0,
										"cornerRadiusTop": 3,
										"fillAlphas": 1,
										"gapPeriod": 1,
										"id": "AmGraph-1",
										"labelPosition": "bottom",
										"lineAlpha": 0,
										"negativeFillAlphas": 0,
										"labelAnchor": "middle",
										"labelPosition": "right",
										"labelOffset": 20,
										"labelRotation": 90,
										"labelText": "Concepts",
										"title": "graph 1",
										"type": "column",
										"valueField": "graph 1"
									}
								],
								"guides": [
									{
										"above": true,
										"angle": 0,
										"balloonText": "Total invoices: " + totalInvoices,
										"boldLabel": true,
										"dashLength": 0,
										"expand": true,
										"fillColor": "#FFFF00",
										"id": "Guide-1",
										"inside": true,
										"label": "Total invoices",
										"labelRotation": 90,
										"lineAlpha": 1,
										"lineColor": "#FFC800",
										"lineThickness": 2,
										"position": "bottom",
										"tickLength": 3,
										"toAngle": 0,
										"value": totalInvoices,
										"valueAxis": "ValueAxis-1"
									}
								],
								"valueAxes": [
									{
										"id": "ValueAxis-1",
										"includeAllValues": true,
										"includeGuidesInMinMax": true,
										"zeroGridAlpha": 0,
										"integersOnly": true,
										"axisAlpha": 0,
										"gridAlpha": 0,
										"minorGridAlpha": 0,
										"offset": 2,
										"title": "",
										"titleFontSize": 11,
										"gridCount": 0,
										"gridThickness": 0,
										"labelsEnabled": false,
										"axisThickness": 0,
									}
								],
								"allLabels": [],
								"balloon": {
									"maxWidth": 201,
									"offsetX": -3
								},
								"titles": [
									{
										"id": "Title-1",
										"size": 12,
										"text": "Invoices saved as concept"
									}
								],
								"dataProvider": [
									{
										"category": "",
										"graph 1": conceptInvoices
									}
								]
							});
					} else if ($("#admin_chartdiv2").empty()){ 
						AmCharts.makeChart("admin_chartdiv2",
							{
								"type": "serial",
								"categoryField": "category",
								"rotate": true,
								"depth3D": 8,
								"angle": 40,
								"colors": [
									"#eaa40b", //orange
								],
								"startEffect": "easeInSine",
								"startDuration": 2,
								"autoDisplay": true,
								"plotAreaBorderAlpha": 0,
								"plotAreaBorderColor": "#FFF9F9",
								"plotAreaFillAlphas": 0,
								"fontSize": 12,
								"theme": "light",
								"categoryAxis": {
									"autoWrap": true,
									"gridPosition": "start",
									"gridAlpha": 0,
									"titleFontSize": 0,
									"labelsEnabled": false,
									"gridCount": 0,
									"gridThickness": 0,
									"tickLength": 0,
									"axisColor": "#A4A4A4"
								},
								"trendLines": [],
								"graphs": [
									{
										"balloonText": "Invoices saved as concept: [[value]]",
										"bulletAlpha": 0,
										"color": "#000",
										"columnWidth": 1.0,
										"cornerRadiusTop": 3,
										"fillAlphas": 1,
										"gapPeriod": 1,
										"id": "AmGraph-1",
										"labelPosition": "bottom",
										"lineAlpha": 0,
										"negativeFillAlphas": 0,
										"labelAnchor": "middle",
										"labelPosition": "right",
										"labelOffset": 20,
										"labelRotation": 90,
										"labelText": "Concepts",
										"title": "graph 1",
										"type": "column",
										"valueField": "graph 1"
									}
								],
								"guides": [
									{
										"above": true,
										"angle": 0,
										"balloonText": "Total invoices: " + totalInvoices,
										"boldLabel": true,
										"dashLength": 0,
										"expand": true,
										"fillColor": "#FFFF00",
										"id": "Guide-1",
										"inside": true,
										"label": "Total invoices",
										"labelRotation": 90,
										"lineAlpha": 1,
										"lineColor": "#FFC800",
										"lineThickness": 2,
										"position": "bottom",
										"tickLength": 3,
										"toAngle": 0,
										"value": totalInvoices,
										"valueAxis": "ValueAxis-1"
									}
								],
								"valueAxes": [
									{
										"id": "ValueAxis-1",
										"includeAllValues": true,
										"includeGuidesInMinMax": true,
										"zeroGridAlpha": 0,
										"integersOnly": true,
										"axisAlpha": 0,
										"gridAlpha": 0,
										"minorGridAlpha": 0,
										"offset": 2,
										"title": "",
										"titleFontSize": 11,
										"gridCount": 0,
										"gridThickness": 0,
										"labelsEnabled": false,
										"axisThickness": 0,
									}
								],
								"allLabels": [],
								"balloon": {
									"maxWidth": 201,
									"offsetX": -3
								},
								"titles": [
									{
										"id": "Title-1",
										"size": 12,
										"text": "Invoices saved as concept"
									}
								],
								"dataProvider": [
									{
										"category": "",
										"graph 1": conceptInvoices
									}
								]
							});
					}

					$("#home").css("margin-bottom", "40px");
				}

				//-----------------------------------------------------------------
				//Chart two of two
				if (paidCount >= 0 && unpaidCount > 0) {
					if ($("#admin_chartdiv2").empty()) {
						AmCharts.makeChart("admin_chartdiv2",
							{
								"type": "serial",
								"categoryField": "category",
								"colors": [
									"#00a1ff", //blue
									"#8a11f4", //purple
								],
								"columnSpacing": 15,
								"columnWidth": 0.5,
								"depth3D": 8,
								"angle": 40,
								"startDuration": 4,
								"startEffect": "bounce",
								"autoDisplay": true,
								"plotAreaBorderAlpha": 0,
								"plotAreaBorderColor": "#FFF9F9",
								"plotAreaFillAlphas": 0,
								"theme": "light",
								"categoryAxis": {
									"gridPosition": "start",
									"title": "",
									"titleFontSize": 11,
									"labelsEnabled": false,
									"gridCount": 0,
									"gridThickness": 0,
									"tickLength": 0,
									"axisColor": "#A4A4A4"
								},
								"trendLines": [],
								"graphs": [
									{
										"balloonText": "Invoices collected[[category]]: [[value]]",
										"fillAlphas": 1,
										"id": "AmGraph-1",
										"labelText": "Collected",
										"labelOffset": 12,
										"title": "Collected",
										"type": "column",
										"valueField": "Collected"
									},
									{
										"balloonText": "Invoices due[[category]]: [[value]]",
										"fillAlphas": 1,
										"id": "AmGraph-2",
										"labelText": "Due",
										"labelOffset": 12,
										"title": "Due",
										"type": "column",
										"valueField": "Due"
									}
								],
								"guides": [],
								"valueAxes": [
									{
										"id": "ValueAxis-1",
										"title": "",
										"integersOnly": true,
										"gridCount": 0,
										"gridThickness": 0,
										"labelsEnabled": false,
										"axisThickness": 0
									}
								],
								"allLabels": [],
								"balloon": {
									"borderThickness": 0
								},
								"titles": [
									{
										"id": "Title-1",
										"size": 12,
										"text": "Invoices collected"
									}
								],
								"dataProvider": [
									{
										"category": "",
										"Due": unpaidCount,
										"Collected": paidCount
									}
								]
							}
						);
					} else if ($("#admin_chartdiv").empty()){ 
						AmCharts.makeChart("admin_chartdiv",
							{
								"type": "serial",
								"categoryField": "category",
								"colors": [
									"#00a1ff", //blue
									"#8a11f4", //purple
								],
								"columnSpacing": 15,
								"columnWidth": 0.5,
								"depth3D": 8,
								"angle": 40,
								"startDuration": 4,
								"startEffect": "bounce",
								"autoDisplay": true,
								"plotAreaBorderAlpha": 0,
								"plotAreaBorderColor": "#FFF9F9",
								"plotAreaFillAlphas": 0,
								"theme": "light",
								"categoryAxis": {
									"gridPosition": "start",
									"title": "",
									"titleFontSize": 11,
									"labelsEnabled": false,
									"gridCount": 0,
									"gridThickness": 0,
									"tickLength": 0,
									"axisColor": "#A4A4A4"
								},
								"trendLines": [],
								"graphs": [
									{
										"balloonText": "Invoices collected[[category]]: [[value]]",
										"fillAlphas": 1,
										"id": "AmGraph-1",
										"labelText": "Collected",
										"labelOffset": 12,
										"title": "Collected",
										"type": "column",
										"valueField": "Collected"
									},
									{
										"balloonText": "Invoices due[[category]]: [[value]]",
										"fillAlphas": 1,
										"id": "AmGraph-2",
										"labelText": "Due",
										"labelOffset": 12,
										"title": "Due",
										"type": "column",
										"valueField": "Due"
									}
								],
								"guides": [],
								"valueAxes": [
									{
										"id": "ValueAxis-1",
										"title": "",
										"integersOnly": true,
										"gridCount": 0,
										"gridThickness": 0,
										"labelsEnabled": false,
										"axisThickness": 0
									}
								],
								"allLabels": [],
								"balloon": {
									"borderThickness": 0
								},
								"titles": [
									{
										"id": "Title-1",
										"size": 12,
										"text": "Invoices collected"
									}
								],
								"dataProvider": [
									{
										"category": "",
										"Due": unpaidCount,
										"Collected": paidCount
									}
								]
							}
						);
					}

					$("#home").css("margin-bottom", "40px");
				}

            }
        }
    </script>
}