@using System.Diagnostics
@using InvoiceWebApp.Data
@using InvoiceWebApp.Models
@using static InvoiceWebApp.Models.Debtor
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Home Page";

    User user = null;
    Admin admin = null;
    AppSettings settings = null;

    //Check for user
    if (SessionHelper.IsExists(Context.Session, "User")) {
        user = (User)Context.Session.Get<User>("User");
    }
    //Check for admin
    if (SessionHelper.IsExists(Context.Session, "Admin")) {
        admin = (Admin)Context.Session.Get<Admin>("Admin");
    }
    //Check for settings
    if (SessionHelper.IsExists(Context.Session, "Settings")) {
        Debug.WriteLine("Settings exists");
        settings = SessionHelper.Get<AppSettings>(Context.Session, "Settings");
    } else {
        settings = _context.Settings.FirstOrDefault();
        SessionHelper.Set(Context.Session, "Settings", settings);
    }
}

@section HEAD{
    <link href="https://www.amcharts.com/lib/3/plugins/export/export.css" rel="stylesheet" type="text/css">

    <!-- amCharts javascript code -->
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/pie.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/gauge.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/light.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/dark.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/black.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.js" type="text/javascript"></script>
}

<div>
    <div class="container" id="home">
        <div class="row">
            <div class="col s12 col m12 center-align">
                @if (user != null) {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome, @user.Debtor.FirstName</h4>
                } else if (admin != null) {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome, @admin.FirstName</h4>
                } else {
                    <h4 style="margin-top: 40px;text-transform:uppercase;">Welcome</h4>
                }
            </div>
        </div>

        <div class="row">
            <div class="col s12 col m12">
                <p id="invoiceText" class="center-align"></p>
            </div>
        </div>

        <div class="divider"></div>

        @if (user != null && admin == null) {
            <div class="row">
                <div class="col s3 col m3"></div>
                <div class="col s12 col m12 center-align">
                    <div id="chartdiv" style="width:100%;height:400px;background:rgba(255, 255, 255, 0);display:none;"></div>
                </div>
                <div class="col s3 col m3"></div>
            </div>
        }

        @if (admin != null) {
            <div class="row">
                <div class="col s6 col m6 center-align">
                    <div id="admin_chartdiv" style="width:100%;height:200px;background:rgba(255, 255, 255, 0);"></div>
                </div>
                <div class="col s6 col m6 center-align">
                    <div id="admin_chartdiv2" style="width:100%;height:200px;background:rgba(255, 255, 255, 0);"></div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            var user = null;
            var admin = null;
            var divHeight = $("#home").height();

            @if (user != null) {
                <text>
                    user = "@user.Email";
                </text>
            }
            @if (admin != null) {
                <text>
                    admin = "@admin.Email";
                </text>
            }

            if (user != null) {
                setClientHome();
            }
            if (admin != null) {
                setAdminHome();
            }
            if (user == null && admin == null) {
                var noUserText = `
                            With this application it is possible to view and pay your invoices

                            <br />

                            To use this website, you must login using the credentials sent to you by @settings.CompanyName.

                            <br /><br /><br />

                            <a href="@Url.Action("Login", "Users")"
                                id="home-button"
                                class="btn-large indigo darken-1 waves-effect waves-light">
                                    <i class="fa fa-sign-in"></i>
                                    Sign In
                            </a>`;
                    $("#invoiceText").html(noUserText);
            }
        });

        //Setup text and charts when logged in client reaches home page
        function setClientHome() {
            var paidArray = "";
            var unpaidArray = "";

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices

            @if (ViewBag.clientNotPaidCount == 0){
                <text>
                    $("#invoiceText").html("There are no unpaid invoices found at the moment.");
                </text>
            }
            @if (ViewBag.clientNotPaidCount == 1) {
                <text>
                    $("#invoiceText").html("You have 1 unpaid invoice."
                        + "<br />"
						+ "Total paid: &euro; @(ViewBag.clientPaid)"
                        + "<br />"
                        + "To be paid: &euro;  @(ViewBag.clientNotPaid)");
                </text>
            }
            @if (ViewBag.clientNotPaidCount > 1) {
                <text>
                    $("#invoiceText").html("You have @(ViewBag.clientNotPaidCount) unpaid invoices."
                        + "<br />"
                        + "Total paid: &euro; @(ViewBag.clientPaid)"
                        + "<br />"
                        + "To be paid: &euro;  @(ViewBag.clientNotPaid)");
                </text>
            }
            //-----------------------------------------------------------------
            //Show chart based on invoices

            $("#chartdiv").show();

            @{
                int? paid = ViewBag.clientPaidCount;
                int? unpaid = ViewBag.clientNotPaidCount;

                if (paid != null)
                {
                    <text>
                        paidArray = @paid;
                    </text>
                }
                if (unpaid != null)
                {
                    <text>
                        unpaidArray = @unpaid;
                    </text>
                }
            }

            //-----------------------------------------------------------------
            //Chart one of one
            if (paidArray >= 0 && unpaidArray >= 0) {
                AmCharts.makeChart("chartdiv",
                    {
                        "type": "pie",
                        "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                        "innerRadius": 0,
                        "labelRadius": 21,
                        "startDuration": 2,
                        "radius": 100,
                        "baseColor": "#0063D3",
                        "hoverAlpha": 0.62,
                        "outlineThickness": 0,
                        "titleField": "category",
                        "valueField": "column-1",
                        "decimalSeparator": ",",
                        "percentPrecision": 1,
                        "theme": "light",
                        "thousandsSeparator": ".",
                        "allLabels": [],
                        "creditsPosition": "bottom-right",
                        "showEntries": true,
                        "balloon": {},
                        "legend": {
                            "enabled": true,
                            "align": "center",
                            "markerType": "circle"
                        },
                        "titles": [],
                        "dataProvider": [
                            {
                                "category": "Paid",
                                "column-1": paidArray
                            },
                            {
                                "category": "Unpaid",
                                "column-1": unpaidArray
                            }
                        ]
                    });

                $("#home").css("margin-bottom", "40px");
            }
        }

        //Setup text and charts when logged in admin reaches home page
        function setAdminHome() {
            var noInvoicesText = "";
            var paidCount = "";
            var unpaidCount = "";
            var total = "";
            var totalPaid = "";
			var totalAmountFormatted = "";
			var showCharts = false;

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices
            @if (ViewBag.finalCount == 0) {
                <text>
                    $("#admin_chartdiv").hide();
					$("#admin_chartdiv2").hide();
					noInvoicesText += "There are currently no invoices.";
					showCharts = false;
                </text>
			} else
			{
				<text>
					showCharts = true;
                </text>
			}
            @if (ViewBag.conceptCount == 0){
                <text>
                    noInvoicesText += "";
                </text>
            }
            @if (ViewBag.conceptCount == 1) {
                <text>
                    noInvoicesText += "<br /> You have 1 invoice saved as 'concept'.";
                </text>
            }
            @if (ViewBag.conceptCount > 1) {
                <text>
                    noInvoicesText += "<br /> You have @(ViewBag.conceptCount) invoices saved as 'concept'.";
                </text>
            }

            $("#invoiceText").html(noInvoicesText);

            //-----------------------------------------------------------------
            //Show chart based on invoices

			if (showCharts == true) {
				$("#admin_chartdiv").show();
				$("#admin_chartdiv2").show();

				@{
					int? paidInvoiceCount = ViewBag.adminPaidCount;
					int? unpaidInvoiceCount = ViewBag.adminNotPaidCount;

					decimal? totalPaid = ViewBag.totalPaid;
					decimal? totalAmount = ViewBag.total;

					if (paidInvoiceCount != null){
						<text>
							paidCount = @paidInvoiceCount;
						</text>
					}
					if (unpaidInvoiceCount != null){
						<text>
							unpaidCount = @unpaidInvoiceCount;
						</text>
					}
					if (totalPaid != null){
						<text>
							totalPaid = @totalPaid;
						</text>
					}
					if (totalAmount != null){
						<text>
							total = @totalAmount;
						</text>
					}
				}

				//Format to two decimal number
				if (total > 0) {
					totalAmountFormatted = AmCharts.formatNumber(total, {
						precision: -1,
						decimalSeparator: ",",
						thousandsSeparator: "."
					}, 2);
				}

				//-----------------------------------------------------------------
				//Chart one of two
				if (total > 0 && totalPaid >= 0) {
					AmCharts.makeChart("admin_chartdiv",
						{
							"type": "serial",
							"categoryField": "category",
							"decimalSeparator": ",",
							"thousandsSeparator": ".",
							"rotate": true,
							"startDuration": 2,
							"creditsPosition": "bottom-left",
							"theme": "light",
							"precision": 2,
							"usePrefixes": false,
							"categoryAxis": {
								"autoRotateCount": 0,
								"gridPosition": "start",
								"autoGridCount": false,
								"labelsEnabled": false,
								"title": "Currently Paid",
								"size": 10
							},
							"trendLines": [],
							"graphs": [
								{
									"fillAlphas": 1,
									"id": "AmGraph-1",
									"title": "graph 1",
									"precision": 2,
									"type": "column",
									"valueField": "graph 1",
									"balloonText": "Currently Paid: €[[graph 1]]",
									"balloonFunction": function (item, graph) {
										var result = graph.balloonText;
										for (var key in item.dataContext) {
											if (item.dataContext.hasOwnProperty(key) && !isNaN(item.dataContext[key])) {
												var formatted = AmCharts.formatNumber(item.dataContext[key], {
													precision: -1,
													decimalSeparator: ",",
													thousandsSeparator: "."
												}, 2);
												result = result.replace("[[" + key + "]]", formatted);
											}
										}
										return result;
									},
								}
							],
							"guides": [
								{
									"above": true,
									"balloonText": "Total Amount: €" + totalAmountFormatted,
									"position": "top",
									"boldLabel": true,
									"angle": 0,
									"dashLength": 0,
									"id": "Guide-1",
									"inside": true,
									"label": "Total Amount",
									"labelRotation": 90,
									"lineAlpha": 1,
									"lineColor": "#FFFF00",
									"lineThickness": 3,
									"value": total
								}
							],
							"valueAxes": [
								{
									"id": "ValueAxis-1",
									"maximum": total,
									"minimum": (totalPaid - (totalPaid / 3)),
									"precision": 2,
									"unit": "€",
									"labelsEnabled": false,
									"unitPosition": "left",
									"title": "",
									"titleBold": false
								}
							],
							"allLabels": [],
							"balloon": {},
							"titles": [
								{
									"id": "Title-1",
									"size": 10,
									"text": "Current amount of paid invoices"
								}
							],
							"dataProvider": [
								{
									"category": "category 1",
									"graph 1": totalPaid
								}
							]
						});

					$("#home").css("margin-bottom", "40px");
				}

				//-----------------------------------------------------------------
				//Chart two of two
				if (paidCount >= 0 && unpaidCount >= 0) {
					AmCharts.makeChart("admin_chartdiv2",
						{
							"type": "pie",
							"balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
							"innerRadius": 3,
							"labelRadius": 16,
							"radius": 90,
							"maxLabelWidth": 198,
							"pullOutDuration": 2,
							"pullOutEffect": "elastic",
							"startDuration": 2,
							"startEffect": "easeOutSine",
							"titleField": "category",
							"valueField": "column-1",
							"creditsPosition": "bottom-right",
							"theme": "light",
							"allLabels": [],
							"balloon": {},
							"legend": {
								"enabled": true,
								"align": "center",
								"markerType": "circle",
							},
							"titles": [
								{
									"id": "Title-1",
									"size": 10,
									"text": "Percentages of paid/unpaid invoices"
								}
							],
							"dataProvider": [
								{
									"category": "Paid",
									"column-1": paidCount
								},
								{
									"category": "Unpaid",
									"column-1": unpaidCount
								}
							]
						});

					$("#home").css("margin-bottom", "40px");
				}
            }
        }
    </script>
}